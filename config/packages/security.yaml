security:
    password_hashers:
        App\Entity\User:
            algorithm: auto
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    # enable_authenticator_manager: true                
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false          
        main:
            anonymous: true   
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator                 
        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path:               /api/login
                username_path: username
                password_path: password                
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false

        api:
            pattern:   ^/api/
            stateless: true
            anonymous: true            
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
            logout:
                path: app_logout                    

    access_control:
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/register,       roles: PUBLIC_ACCESS }
        - { path: ^/api/,       roles: PUBLIC_ACCESS }
        - { path: ^/api/admin,       roles: IS_AUTHENTICATED_FULLY  }